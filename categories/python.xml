<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Experiments with Data (Posts about python)</title><link>https://raunakm90.github.io/</link><description></description><atom:link href="https://raunakm90.github.io/categories/python.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><copyright>Contents © 2017 &lt;a href="mailto:raunakm90@gmail.com"&gt;Raunak Mundada&lt;/a&gt; </copyright><lastBuildDate>Thu, 31 Aug 2017 00:10:05 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Yelp Visualization</title><link>https://raunakm90.github.io/posts/yelp-visualization/</link><dc:creator>Raunak Mundada</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;One’s ability of making decisions is largely dependent on others opinions with similar experiences. In today’s era of internet and information, it has become easier to find people with similar experiences you are looking for and website services like Yelp are playing an important role in making such information readily available. These reviews shared by service users are valuable for both business owners and prospective customers. The reviews consists of text description, star ratings, reviewer’s information, business descriptions for various categories (as defined by Yelp) etc. People can also vote on user reviews if they find it useful, funny or cool. The goal is to classify sentiments using the enormous review data text and predict the success or failure of a business. Here, we plan to conduct a sentiment analysis of the text description of the reviews received for food businesses in Charlotte. The idea is to find attributes that result in high ratings and thus suggest improvements in certain services in order to attract more customers. Some of the questions we will be interested in includes; how well we can guess a review's rating from its text alone? What are the most common positive and negative words used in reviews? Can we extract tips from reviews? Is it possible to predict the closure of a business based on the reviews received?&lt;/p&gt;
&lt;p&gt;Here in the first phase, we focus on visualizations (graphs, plots and maps) to explore the data in a way that can be useful for further analysis. We look at how the location, keywords and attributes affect the success of the business. Focussing on keywords from the reviews, it's sentiment and other significant effects caused by the attributes of a business we can model the success or failure of a business. This idea can be further extended to analyse the reviews and the attributes of a business and predict its success or failure. It can further provide suggestions to help businesses to improve and succeed.&lt;/p&gt;
&lt;p&gt;We look at the Charlotte food businesses from the following perspective -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How does location affect a business?&lt;/li&gt;
&lt;li&gt;What keywords define the location?&lt;/li&gt;
&lt;li&gt;Which attributes define a location?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We intend to measure the effectiveness of the model based on classification accuracy of Yelp's historical data. Based on the model, we can then define the important features of a successful food business in Charlotte.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://raunakm90.github.io/posts/yelp-visualization/"&gt;Read more…&lt;/a&gt; (56 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>data-viz</category><category>plotly</category><category>python</category><category>yelp</category><guid>https://raunakm90.github.io/posts/yelp-visualization/</guid><pubDate>Thu, 31 Aug 2017 00:06:10 GMT</pubDate></item><item><title>Credit Card Fraud Detection - Logistic Regression and ADASYN</title><link>https://raunakm90.github.io/posts/credit-card-fraud-detection-logistic-regression-and-adasyn/</link><dc:creator>Raunak Mundada</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This is a continuation of the credit card fraud detection - data visualization post. I now build a machine learning model using Adaptive Synthetic Sampling to detect credit card frauds.&lt;/p&gt;
&lt;p&gt;I came across Kaggle's dataset on &lt;a href="https://www.kaggle.com/dalpozz/creditcardfraud"&gt;Credit Card Fraud Detection&lt;/a&gt; and decided to dive into this problem. This dataset includes transactions by European cardholders completed in September 2013. I want to explore some of the classification methods that could be used to solve this problem. The biggest challenge of this problem is the class imbalance - only 0.172% of all transactions in this dataset are fraudulent. The goal of this project is to start with a simple yet powerful model like &lt;a href="https://onlinecourses.science.psu.edu/stat504/node/149"&gt;Logistic Regression&lt;/a&gt;. Along with implementing logistic regression, I also wanted to explore some the methods used to handle class imbalance. In this post, I use &lt;a href="http://ieeexplore.ieee.org/document/4633969/?part=1"&gt;Adaptive Synthetic Sampling (ADASYN)&lt;/a&gt;, which is further discussed in this post.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://raunakm90.github.io/posts/credit-card-fraud-detection-logistic-regression-and-adasyn/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>class-imbalance</category><category>classification</category><category>logistic regression</category><category>python</category><category>scikit-learn</category><guid>https://raunakm90.github.io/posts/credit-card-fraud-detection-logistic-regression-and-adasyn/</guid><pubDate>Thu, 31 Aug 2017 00:00:18 GMT</pubDate></item><item><title>Credit Card Fraud Detection - Data Exploration</title><link>https://raunakm90.github.io/posts/credit-card-fraud-detection-data-exploration/</link><dc:creator>Raunak Mundada</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This is the first post for &lt;a href="https://www.kaggle.com/dalpozz/creditcardfraud"&gt;Credit Card Fraud Detection&lt;/a&gt;. The goal of this project is to explore different classification models and evaluate their performance for an imbalanced dataset. Along with implementing classification models, I also wanted to explore some the methods used to handle class imbalance.
In this post, I mainly explore the dataset using visualization tools.&lt;/p&gt;
&lt;p&gt;We hear/read about credit card frauds and identity theft every other day. Recently, I received a call from a fraudster. Unaware, I was almost duped. Thankfully, I realized something is awfully wrong with the voice and the tone of the caller. Plus, he asked me to pay my 'fines' using Walmart gift cards. Really?! I managed to escape this but not without divulging some information about me. What if he uses that information to hack into my back accounts? He would've committed credit card fraud maybe by using my card information on online shopping websites.&lt;/p&gt;
&lt;p&gt;Credit card frauds can be unnoticeable to the human eye. It is easy to pretend some one while using the card. In my experience, only at shopping centres has my ID been checked with my credit card. Everywhere else I could be anyone but the cardholder. All of the online websites I have used requires me to just enter my card information and zip code (how easy is that once you have the card information) instead of two-step verification (like a verification code through a text message). I might be missing something here in terms of online card transaction security and any information on this would be great. My point being, it's not that difficult to get someone else's card information and use it for different purposes. So, how do banks and credit card companies keep us safe in terms of credit card frauds? It's by using historical data of all the transactions! Fraudulent transactions may have a pattern - card is used in different locations, huge withdrawals and transactions in small amounts to avoid suspicion are just some of the indications.&lt;/p&gt;
&lt;p&gt;I came across Kaggle's dataset on &lt;a href="https://www.kaggle.com/dalpozz/creditcardfraud"&gt;Credit Card Fraud Detection&lt;/a&gt; and decided to dive into this problem. This dataset includes transactions by European cardholders completed in September 2013. I want to explore some of the classification methods that could be used to solve this problem. The biggest challenge of this problem is the class imbalance - only 0.172% of all transactions in this dataset are fraudulent. This post explores the dataset using data visualization.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://raunakm90.github.io/posts/credit-card-fraud-detection-data-exploration/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>creditcardfraud</category><category>data-viz</category><category>python</category><guid>https://raunakm90.github.io/posts/credit-card-fraud-detection-data-exploration/</guid><pubDate>Wed, 30 Aug 2017 23:24:22 GMT</pubDate></item><item><title>plotly example</title><link>https://raunakm90.github.io/posts/plotly-example/</link><dc:creator>Raunak Mundada</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://plot.ly/"&gt;Plotly&lt;/a&gt; is one of my favourite tools for data visualization. When I started writing this blog, plotly graphs were not embedded in the correct format. This is a simple post on how to embed your plotly graphs on a blog/webpage using a Jupyter notebook.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://raunakm90.github.io/posts/plotly-example/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>data-viz</category><category>plotly</category><category>python</category><guid>https://raunakm90.github.io/posts/plotly-example/</guid><pubDate>Wed, 30 Aug 2017 19:34:17 GMT</pubDate></item></channel></rss>